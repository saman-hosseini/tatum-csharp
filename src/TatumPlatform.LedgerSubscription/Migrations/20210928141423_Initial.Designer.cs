// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TatumPlatform.LedgerSubscription.Model;

namespace TatumPlatform.LedgerSubscription.Migrations
{
    [DbContext(typeof(LedgerContext))]
    [Migration("20210928141423_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TatumPlatform.LedgerSubscription.Model.AccountIncomingBlockchainTransaction", b =>
                {
                    b.Property<long>("TId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BlockHeight")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Date")
                        .HasColumnType("bigint");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TxId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TId");

                    b.ToTable("AccountIncomingBlockchainTransactions");
                });

            modelBuilder.Entity("TatumPlatform.LedgerSubscription.Model.AccountPendingBlockchainTransaction", b =>
                {
                    b.Property<long>("TId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlockHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BlockHeight")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Date")
                        .HasColumnType("bigint");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TxId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TId");

                    b.ToTable("AccountPendingBlockchainTransaction");
                });

            modelBuilder.Entity("TatumPlatform.LedgerSubscription.Model.CustomerTradeMatch", b =>
                {
                    b.Property<long>("TId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Created")
                        .HasColumnType("bigint");

                    b.Property<string>("Currency1AccountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency2AccountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpiredWithoutMatch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FrefeeAccountIdated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsMaker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pair")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TId");

                    b.ToTable("CustomerTradeMatch");
                });

            modelBuilder.Entity("TatumPlatform.LedgerSubscription.Model.KmsCompletedTx", b =>
                {
                    b.Property<long>("TId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignatureId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TId");

                    b.ToTable("KmsCompletedTx");
                });

            modelBuilder.Entity("TatumPlatform.LedgerSubscription.Model.KmsFailedTx", b =>
                {
                    b.Property<long>("TId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Error")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignatureId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TId");

                    b.ToTable("KmsFailedTx");
                });

            modelBuilder.Entity("TatumPlatform.LedgerSubscription.Model.TransactionInTheBlock", b =>
                {
                    b.Property<long>("TId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BlockHeight")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TxId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WithdrawalId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TId");

                    b.ToTable("TransactionInTheBlock");
                });
#pragma warning restore 612, 618
        }
    }
}
